<<<<<<< HEAD
# ============================================================
# Ethicore Engineâ„¢ - Guardian - .gitignore
# ============================================================

# ============================================================
# PROPRIETARY / SENSITIVE (Never commit these)
# ============================================================

# Trained ML models (proprietary)
models/threat-detector-v*.h5
models/threat-detector-v*.json
models/threat-detector-v*.bin
models/*.weights
models/*.bin
models/*.h5
models/*.pb
models/*.pth
models/*.onnx
models/embeddings-cache.json
models/model.json
models/group*.bin
models/*shard*
proprietary/

# Training artifacts (contain proprietary learning)
training/
experiments/
checkpoints/
*.ckpt
*.ckpt.*
*.tfevents.*
tensorboard/

# Training data and datasets (potentially sensitive)
data/training/
data/real/
data/production/
datasets/
*.csv.gz
*.jsonl.gz
training_data/

# Hyperparameters and configs (tuned for competitive advantage)
config.trained.json
hyperparameters.json
tuned_config.json

# Feature scaling parameters (learned from data)
models/scaler.json
models/normalizer.json
models/feature_stats.json

# API keys, secrets, credentials
.env
.env.local
secrets/
*.key
*.pem
*.secret

# Private configuration
config.private.json
secrets.json

# Build artifacts containing proprietary code
dist/proprietary/
build/proprietary/

# ============================================================
# DEVELOPMENT FILES
# ============================================================

# Node modules
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build output
dist/
build/
*.zip
*.xpi
*.crx

# IDE / Editor
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Testing
coverage/
.nyc_output/
test-results/

# Logs
logs/
*.log

# Temporary files
tmp/
temp/
*.tmp

# ============================================================
# FIREFOX EXTENSION SPECIFIC
# ============================================================

# Generated extension packages
ethicore-guardian-*.zip
ethicore-guardian-*.xpi

# Firefox profiles (if testing locally)
firefox-profile/

# Web-ext artifacts
web-ext-artifacts/

# ============================================================
# SENSITIVE DATA (User data, even in dev)
# ============================================================

# Never commit real user data
user-data/
test-data/real-users/
*.sqlite
*.db

# Don't commit incident reports with real data
incidents/real/

# ============================================================
# OPTIONAL (Depends on your workflow)
# ============================================================

# If you use package-lock (or don't)
# Uncomment ONE of these:
package-lock.json  # If you want contributors to use their own versions
# yarn.lock          # Or this if you use Yarn

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~
.directory
=======
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.*
!.env.example

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Sveltekit cache directory
.svelte-kit/

# vitepress build output
**/.vitepress/dist

# vitepress cache directory
**/.vitepress/cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# Firebase cache directory
.firebase/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v3
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Vite logs files
vite.config.js.timestamp-*
vite.config.ts.timestamp-*
>>>>>>> 98ebd9ea8bd591b5fb0f9b24b429c5cd3fc35715
